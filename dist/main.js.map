{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/collection/collection.component.css","webpack:///./src/app/components/collection/collection.component.html","webpack:///./src/app/components/collection/collection.component.ts","webpack:///./src/app/components/customer/customer.component.css","webpack:///./src/app/components/customer/customer.component.html","webpack:///./src/app/components/customer/customer.component.ts","webpack:///./src/app/components/data/data.component.css","webpack:///./src/app/components/data/data.component.html","webpack:///./src/app/components/data/data.component.ts","webpack:///./src/app/components/navigation/navigation.component.css","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/components/warehouse/warehouse.component.css","webpack:///./src/app/components/warehouse/warehouse.component.html","webpack:///./src/app/components/warehouse/warehouse.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n        <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes,RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { WarehouseComponent } from './components/warehouse/warehouse.component';\nimport { CollectionComponent } from './components/collection/collection.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { DataComponent } from './components/data/data.component'\n\n\nimport {ApiService} from './services/api.service';\n\nconst routes:Routes =[\n  {path:'collection',component:CollectionComponent},\n  {path:'customer',component:CustomerComponent},\n  {path:'warehouse',component:WarehouseComponent},\n  {path:'provenance',component:DataComponent},\n  {path:'',redirectTo:'/warehouse',pathMatch:'full'}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WarehouseComponent,\n    CollectionComponent,\n    CustomerComponent,\n    NavigationComponent,\n    DataComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    HttpModule,\n    FormsModule\n  ],\n  providers: [\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n \n }\n","module.exports = \"\"","module.exports = \"<form>\\n   \\n  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"id\\\" name=\\\"id\\\"/> <br>\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"status\\\" name=\\\"status\\\"/> <br>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" (click)=\\\"submit()\\\" />\\n  \\n  <div *ngIf=\\\"loading\\\" class=\\\"alert alert-light\\\" role=\\\"alert\\\">\\n      Updating ledger ..\\n  </div>\\n  <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      Ledger updated\\n  </div>\\n  <div *ngIf=\\\"failure\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Some error occoured\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service'\n@Component({\n  selector: 'app-collection',\n  templateUrl: './collection.component.html',\n  styleUrls: ['./collection.component.css']\n})\nexport class CollectionComponent implements OnInit {\n  id=''\n  status=''\n  result:any\n  loading:boolean=false\n  success:boolean=false\n  failure:boolean=false\n  constructor( private api : ApiService) { }\n\n  ngOnInit() {\n  }\n  submit(){\n    this.loading=true;\n    this.success=false;\n    this.failure=false;\n    this.api.addCollectionEntry({id:this.id,status:this.status}).subscribe(data=>{\n      this.result=JSON.stringify(data)\n      console.log(data)\n      if(data.success){\n        this.success=true\n      }else{\n        this.failure=true\n      }\n      this.loading=false;\n    })\n  }\n}\n ","module.exports = \"\"","module.exports = \"<form>\\n   \\n  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"id\\\" name=\\\"id\\\"/> <br>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" (click)=\\\"submit()\\\" />\\n  \\n  <div *ngIf=\\\"loading\\\" class=\\\"alert alert-light\\\" role=\\\"alert\\\">\\n      checkung status\\n  </div> <br>\\n  <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      The package is at <b> {{location}}</b> . Status : <b>{{status}}</b>\\n  </div>\\n  <div *ngIf=\\\"failure\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Some error occoured\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../../services/api.service'\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  id=''\n  result:any\n  loading:boolean=false\n  success:boolean=false\n  failure:boolean=false\n  location:string\n  status:string\n  constructor( private api : ApiService) { }\n\n  ngOnInit() {\n  }\n  submit(){\n    this.loading=true;\n    this.success=false;\n    this.failure=false;\n    this.api.getData({id:this.id}).subscribe(data=>{\n      this.result=JSON.stringify(data)\n      console.log(data)\n      if(data.success){\n        this.success=true\n        this.location=JSON.parse(this.result).message.location\n        this.status=JSON.parse(this.result).message.status\n      }else{\n        this.failure=true\n      }\n      this.loading=false;\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<form>\\n   \\n  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"id\\\" name=\\\"id\\\"/> <br>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" (click)=\\\"submit()\\\" />\\n  \\n  <div *ngIf=\\\"loading\\\" class=\\\"alert alert-light\\\" role=\\\"alert\\\">\\n      checking status\\n  </div> <br>\\n  <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      successfully queried\\n  </div>\\n  <div *ngIf=\\\"success\\\" >\\n    {{result}}\\n  </div>\\n  <div *ngIf=\\\"failure\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      Some error occoured\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service'\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css']\n})\nexport class DataComponent implements OnInit {\n  id=''\n  status=''\n  result:any\n  loading:boolean=false\n  success:boolean=false\n  failure:boolean=false\n  constructor( private api : ApiService) { }\n\n  ngOnInit() {\n  }\n  submit(){\n    this.loading=true;\n    this.success=false;\n    this.failure=false;\n    this.api.dataProvenance({id:this.id}).subscribe(data=>{\n      this.result=JSON.stringify(data.message)\n      console.log(data)\n      if(data.success){\n        this.success=true\n      }else{\n        this.failure=true\n      }\n      this.loading=false;\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Supplychain</a>\\n      </div>\\n  \\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        \\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/warehouse\\\" >Warehouse</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/collection\\\" >Collection Centre</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/customer\\\" >Customer</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/provenance\\\" >Data Provenance</a></li>\\n\\n        </ul>\\n        \\n      </div>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\n   \\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"id\\\" name=\\\"id\\\"/> <br>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"status\\\" name=\\\"status\\\"/> <br>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" (click)=\\\"submit()\\\" />\\n        \\n        <div *ngIf=\\\"loading\\\" class=\\\"alert alert-light\\\" role=\\\"alert\\\">\\n            Updating ledger ..\\n        </div>\\n        <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n            Ledger updated\\n        </div>\\n        <div *ngIf=\\\"failure\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            Some error occoured\\n        </div>\\n      \\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service'\n@Component({\n  selector: 'app-warehouse',\n  templateUrl: './warehouse.component.html',\n  styleUrls: ['./warehouse.component.css']\n})\nexport class WarehouseComponent implements OnInit {\n  id=''\n  status=''\n  result:any\n  loading:boolean=false\n  success:boolean=false\n  failure:boolean=false\n  constructor( private api : ApiService) { }\n\n  ngOnInit() {\n  }\n  submit(){\n    this.loading=true;\n    this.success=false;\n    this.failure=false;\n    this.api.addWarehouseEntry({id:this.id,status:this.status}).subscribe(data=>{\n      this.result=JSON.stringify(data)\n      console.log(data)\n      if(data.success){\n        this.success=true\n      }else{\n        this.failure=true\n      }\n      this.loading=false;\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Http,Headers} from '@angular/http'\nimport 'rxjs/add/operator/map'\n@Injectable()\nexport class ApiService {\n\n  constructor(private http:Http) {\n    \n   }\n   addWarehouseEntry(details){\n    let headers=new Headers()\n    headers.append('Content-Type','application/json')\n    return this.http.post('/api/warehouse/add',details,{headers:headers}).map(res=>res.json())\n  }\n  addCollectionEntry(details){\n    let headers=new Headers()\n    headers.append('Content-Type','application/json')\n    return this.http.post('/api/collection/add',details,{headers:headers}).map(res=>res.json())\n  }\n  getData(id){\n    let headers=new Headers()\n    headers.append('Content-Type','application/json')\n    return this.http.post('/api/getStatus',id,{headers:headers}).map(res=>res.json())\n  }\n  dataProvenance(id){\n    let headers=new Headers()\n    headers.append('Content-Type','application/json')\n    return this.http.post('/api/provenance',id,{headers:headers}).map(res=>res.json())\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}